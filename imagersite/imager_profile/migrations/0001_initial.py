# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-11-28 00:19
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('description', models.TextField(max_length=2000)),
                ('date_published', models.DateTimeField()),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('daet_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImagerProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website', models.CharField(max_length=180)),
                ('location', models.CharField(max_length=50)),
                ('commission', models.FloatField(max_length=20)),
                ('camera', models.CharField(choices=[('NKD3300', 'NikonD3300'), ('CNT6I', 'CanonT6i'), ('CNMKD5III', 'Canon5dMarkIII'), ('SNYA99II', 'SonyAlphaA99II')], default='CNT6I', max_length=20)),
                ('services', models.TextField(choices=[('ULT', '20 photos, provided lighting equipment, additional photo editing post-production.'), ('MEGA', '15 photos, provided lighting equipment, 5 free prints of your choice.'), ('BSC', '10 photos, 3 free prints of your choice.')], default='MEGA', max_length=2000)),
                ('bio', models.TextField(max_length=2000)),
                ('phone', models.CharField(max_length=14)),
                ('photo_styles', models.TextField(choices=[('70s', 'Classic retro style with filters to match.'), ('NOIR', 'Bold black and white photos.'), ('BOKEH', 'Blurry background with subject in focus.'), ('STUDIO', 'Profile shots with bright lighting and white backdrop.'), ('STD', 'Regular shots with no filters.')], default='STD', max_length=400)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=180)),
                ('image', models.ImageField(upload_to='')),
                ('description', models.CharField(max_length=180)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_published', models.DateTimeField(auto_now=True)),
                ('published', models.CharField(choices=[('PRIVATE', 'This photo is private'), ('SHARED', 'This photo is shared'), ('PUBLIC', 'This photo is public')], default='PRIVATE', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_confirmed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='album',
            name='album',
            field=models.ManyToManyField(to='imager_profile.Photo'),
        ),
        migrations.AddField(
            model_name='album',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
    ]
